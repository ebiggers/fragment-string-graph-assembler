digraph {
	graph [dir=LR nodesep=0.1 ]
	node [shape=rect fontsize=24 fontname="Arial bold"]
	build_bidirected_string_graph [label="build-bidirected-string-graph"];
	build_directed_string_graph [label="build-directed-string-graph"];
	collapse_unbranched_paths [label="collapse-unbranched-paths"];
	compute_overlaps [label="compute-overlaps"];
	convert_reads [label="convert-reads"];
	digraph_to_bidigraph [label="digraph-to-bidigraph"];
	remove_contained_reads [label="remove-contained-reads"];
	map_contained_reads [label="map-contained-reads"];
	calculate_a_statistics [label="calculate-A-statistics"];
	bidigraph_network_flow [label="bidigraph-min-cost-circulation",style=filled,fillcolor=gray];
	bidigraph_eulerian_path [label="bidigraph-eulerian-cycle"];
	transitive_reduction [label="transitive-reduction"];
	convert_reads2 [label="convert-reads"];

	convert_reads -> compute_overlaps //[label="reads.bvv"];
	convert_reads -> remove_contained_reads //[label="reads.bvv"];

	compute_overlaps -> remove_contained_reads //[label="out.overlaps"];

	//remove_contained_reads -> build_directed_string_graph //[ label="reads.uncontained.bvv"];

	remove_contained_reads -> build_bidirected_string_graph
	remove_contained_reads -> build_directed_string_graph //[ label="out.uncontained.overlaps"];
	remove_contained_reads -> map_contained_reads
	compute_overlaps -> map_contained_reads
	convert_reads -> map_contained_reads
	build_directed_string_graph -> transitive_reduction //[ label="out.digraph"];
	build_bidirected_string_graph -> transitive_reduction
	transitive_reduction -> map_contained_reads //[ label="out.reduced.digraph"];
	map_contained_reads -> collapse_unbranched_paths //[ label="out.reduced.mapped.digraph"];
	collapse_unbranched_paths -> calculate_a_statistics //[ label="out.reduced.mapped.collapsed.digraph"];
	calculate_a_statistics -> digraph_to_bidigraph //[ label="out.reduced.mapped.collapsed.calc.digraph"];
	digraph_to_bidigraph -> bidigraph_network_flow
	bidigraph_network_flow -> bidigraph_eulerian_path //[ label="out.reduced.mapped.collapsed.calc.digraph"];

	bidigraph_eulerian_path -> convert_reads2 //[ label="out.paths.bvv" ];
}
